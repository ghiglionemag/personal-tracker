{"mappings":"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","sources":["src/components/text/index.ts","src/components/button/index.ts","src/components/to-do-item/index.ts","src/state.ts","src/pages/to-do/index.ts","src/router.ts","src/pages/done/index.ts","src/index.ts"],"sourcesContent":["export class Text extends HTMLElement {\r\n  shadow: ShadowRoot;\r\n  tagName: string;\r\n  tags: string[] = [\"h1\", \"h2\", \"p\"];\r\n  tag: string = \"p\";\r\n  constructor() {\r\n    super();\r\n    this.shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    if (this.tags.includes(this.getAttribute(\"tag\"))) {\r\n      this.tag = this.getAttribute(\"tag\") || this.tag;\r\n    }\r\n    this.render();\r\n  }\r\n  render() {\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = `\r\n    h1{\r\n        font-size: 25pxpx;\r\n        font-weight: bold;\r\n        background-color: blue;\r\n        max-width: 98%;\r\n      }\r\n      h2{\r\n        font-size: 25px;\r\n        font-weight: bold;\r\n        height: 35px;\r\n      }\r\n      h2:hover{\r\n          background-color: #fff;\r\n      }\r\n      p{\r\n        font-family: \"Roboto\";\r\n        font-size: 18px;\r\n      }\r\n      h1,\r\n      h2{\r\n        font-family: 'Fira Sans', sans-serif;\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        color: #000;\r\n        border-radius: 10px;\r\n        text-align: center;\r\n      }\r\n      `;\r\n    const rootEl = document.createElement(this.tag);\r\n    rootEl.textContent = this.textContent;\r\n    this.shadow.appendChild(style);\r\n    this.shadow.appendChild(rootEl);\r\n  }\r\n}\r\ncustomElements.define(\"my-text\", Text);\r\n","export class Button extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.render();\r\n  }\r\n  render() {\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    const button = document.createElement(\"button\");\r\n    button.className = \"root\";\r\n\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = `\r\n            .root{\r\n                min-width: 100pxpx; \r\n                line-height: 55px;\r\n                margin: 12px 0px;\r\n                border-radius: 20px;\r\n                font-size: 22px;\r\n                text-align: center;\r\n                font-family: 'Anton', sans-serif;\r\n            }\r\n            @media (min-width: 899px){\r\n                .root{\r\n                  margin-left: 10px;\r\n                  \r\n                }\r\n              }\r\n        `;\r\n\r\n    button.textContent = this.textContent;\r\n\r\n    shadow.appendChild(button);\r\n    shadow.appendChild(style);\r\n  }\r\n}\r\ncustomElements.define(\"my-button\", Button);","customElements.define(\r\n  \"to-do-item\",\r\n  class extends HTMLElement {\r\n    shadow: ShadowRoot;\r\n    title: string;\r\n    checked: boolean = false;\r\n    constructor() {\r\n      super();\r\n      this.shadow = this.attachShadow({ mode: \"open\" });\r\n    }\r\n    connectedCallback() {\r\n      this.title = this.getAttribute(\"title\") || \"\";\r\n      this.checked = this.hasAttribute(\"checked\");\r\n      this.id = this.getAttribute(\"id\");\r\n\r\n      const style = document.createElement(\"style\");\r\n      style.innerText = `\r\n       \r\n        .item{\r\n            display: flex;\r\n            justify-content: space-between;\r\n            padding: 22px 13px;\r\n            font-size: 18px;\r\n            background-color: rgba(255, 255, 255, 0.5);\r\n            color: #000;\r\n            border-radius: 10px;\r\n        }\r\n\r\n        .titulo.checked{\r\n            text-decoration: line-through;\r\n        }\r\n        .checkbox-input {\r\n          margin-top: 15px;\r\n          height: 20px;\r\n          width: 20px;\r\n        }\r\n        `;\r\n\r\n      this.shadow.appendChild(style);\r\n      this.render();\r\n    }\r\n\r\n    addListeners() {\r\n      const checkedElement = this.shadow.querySelector(\".checkbox-input\");\r\n      checkedElement.addEventListener(\"click\", (e) => {\r\n        const target = e.target as any;\r\n        const event = new CustomEvent(\"change\", {\r\n          detail: {\r\n            id: this.id,\r\n            value: target.checked,\r\n            deleted: true\r\n          },\r\n        });\r\n \r\n        this.dispatchEvent(event);\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const div = document.createElement(\"div\");\r\n      div.innerHTML = `\r\n      <my-text tag=\"p\" class=\"titulo ${this.checked ? \"checked\" : \"\"}\"> ${\r\n        this.title\r\n      } </my-text>\r\n      <input class=\"checkbox-input\" type=\"checkbox\"\r\n      ${this.checked ? \"checked\" : \"\"}\r\n      />\r\n      `;\r\n\r\n      div.classList.add(\"item\");\r\n\r\n      this.shadow.appendChild(div);\r\n      this.addListeners();\r\n    }\r\n  }\r\n);\r\n","const state = {\r\n  data: {\r\n    tasks: [\r\n      { id: 1, title: \"primer item\", completed: false },\r\n      { id: 2, title: \"segundo item\", completed: false },\r\n      { id: 3, title: \"tercer item\", deleted: true },\r\n    ],\r\n  },\r\n  listeners: [],\r\n  getState() {\r\n    return this.data;\r\n  },\r\n  getEnabledTasks() {\r\n    const currentState = this.getState();\r\n    return currentState.tasks.filter((t) => t.completed == false);\r\n  },\r\n  getDisabledTasks(){\r\n    const currentState = this.getState();\r\n    return currentState.tasks.filter((t) => !t.completed == false);\r\n  }\r\n  ,\r\n  addTask(id, title) {\r\n    const currentState = this.getState();\r\n    currentState.tasks.push({ id: id, title, completed: false });\r\n    this.setState(currentState);\r\n  },\r\n  changeItemState(id, value) {\r\n    const currentState = this.getState();\r\n    const found = currentState.tasks.find((t) => t.id == id);\r\n    found.completed = value;\r\n    console.log(found);\r\n    this.setState(currentState);\r\n  },\r\n  setState(newState) {\r\n    this.data = newState;\r\n    for (const cb of this.listeners) {\r\n      cb();\r\n    }\r\n    localStorage.setItem(\"saved-state\", JSON.stringify(newState));\r\n  },\r\n  suscribe(callback: (any) => any) {\r\n    this.listeners.push(callback);\r\n  },\r\n};\r\nexport { state };\r\n","import { state } from \"../../state\";\r\n\r\nexport function initToDoPage(containerEl) {\r\n  const div = document.querySelector(\".root\");\r\n\r\n  const tasks = state.getEnabledTasks();\r\n\r\n  div.innerHTML = `\r\n  <div class=\"nav\">\r\n  <my-button class=\"button-todo\">Pendientes</my-button>\r\n  <my-button class=\"button-done\">Realizados</my-button>\r\n  <div class=\"header\">\r\n  <my-text tag=\"h1\"> Pendientes </my-text> \r\n  <input class=\"inputEl\" type=\"text\" placeholder=\"Nuevo pendiente\">\r\n  <button class=\"add-button\">Agregar</button>\r\n  </div>\r\n  </div>\r\n  <ul class=\"lista\"></ul> \r\n  <div class=\"pagenumbers\" id=\"pagination\"></div>\r\n  \r\n  `;\r\n\r\n  const tasksList = div.querySelector(\".lista\");\r\n\r\n  function createTasks(items) {\r\n    tasksList.innerHTML = \"\";\r\n    for (const item of items) {\r\n      const toDoItemEl = document.createElement(\"to-do-item\");\r\n      toDoItemEl.setAttribute(\"id\", item.id);\r\n      toDoItemEl.setAttribute(\"title\", item.title);\r\n      if (item.completed) {\r\n        toDoItemEl.setAttribute(\"checked\", \"true\");\r\n      }\r\n      toDoItemEl.addEventListener(\"change\", (e: any) => {\r\n        console.log(e);\r\n        state.changeItemState(e.detail.id, e.detail.value);\r\n      });\r\n      tasksList.appendChild(toDoItemEl);\r\n    }\r\n  }\r\n\r\n  state.suscribe(() => {\r\n    createTasks(state.getEnabledTasks());\r\n  });\r\n\r\n  createTasks(tasks);\r\n\r\n \r\n  div.querySelector(\".add-button\").addEventListener(\"click\", () => {\r\n    const inputEl = document.querySelector(\"input\");\r\n    let title = inputEl.value;\r\n    state.addTask(Math.random(), title);\r\n  });\r\n\r\n  div.querySelector(\".button-todo\").addEventListener(\"click\", () => {\r\n    containerEl.goTo(\"/personal-tracker/to-do\");\r\n  });\r\n  div.querySelector(\".button-done\").addEventListener(\"click\", () => {\r\n    containerEl.goTo(\"/personal-tracker/done\");\r\n  });\r\n\r\n\r\n \r\n  return div;\r\n}\r\n","import { initDonePage } from \"./pages/done\";\r\nimport { initToDoPage } from \"./pages/to-do\";\r\nimport { state } from \"./state\";\r\n\r\nconst routes = [\r\n  {\r\n    path: /personal-tracker/,\r\n    component: initToDoPage,\r\n  },\r\n  {\r\n    path: /\\/personal-tracker\\/done/,\r\n    component: initDonePage,\r\n  },\r\n  {\r\n    path: /\\/personal-tracker\\/to-do/,\r\n    component: initToDoPage,\r\n  },\r\n];\r\n\r\nexport function initRouter(conteiner: any) {\r\n  function goTo(path) {\r\n    history.pushState({}, \"\", path);\r\n    handleRoute(path);\r\n  }\r\n\r\n  function handleRoute(route) {\r\n    console.log(\"El handleRoute recibió una nueva ruta\", route);\r\n\r\n    for (const r of routes) {\r\n      if (r.path.test(route)) {\r\n        const el = r.component({ lastState: state.getState(), goTo: goTo });\r\n\r\n        if (conteiner.firstChild) {\r\n          conteiner.firstChild.remove(el);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (location.host.includes(\"github.io\")) {\r\n    goTo(\"/personal-tracker/\");\r\n  } else {\r\n    handleRoute(location.pathname);\r\n  }\r\n\r\n  window.onpopstate = function () {\r\n    handleRoute(location.pathname);\r\n  };\r\n}\r\n","import { state } from \"../../state\";\r\n\r\nexport function initDonePage(containerEl) {\r\n  const div = document.querySelector(\".root\");\r\n\r\n  const tasks = state.getDisabledTasks();\r\n\r\n  div.innerHTML = ` \r\n  <div class=\"nav\">\r\n  <my-button class=\"button-todo\">Pendientes</my-button>\r\n  <my-button class=\"button-done\">Realizados</my-button>\r\n  <div class=\"header\">\r\n  <my-text tag=\"h1\"> Realizados</my-text> \r\n  <input class=\"inputEl\" type=\"text\" placeholder=\"Nuevo pendiente\">\r\n  <button class=\"add-button\">Agregar</button>\r\n  </div>\r\n  </div>\r\n  <ul class=\"lista\"></ul> \r\n  <div class=\"pagenumbers\" id=\"pagination\"></div>\r\n  \r\n  `;\r\n\r\n  const tasksList = div.querySelector(\".lista\");\r\n\r\n  function createTasks(items) {\r\n    tasksList.innerHTML = \"\";\r\n    for (const item of items) {\r\n      const toDoItemEl = document.createElement(\"to-do-item\");\r\n      toDoItemEl.setAttribute(\"id\", item.id);\r\n      toDoItemEl.setAttribute(\"title\", item.title);\r\n      if (item.completed) {\r\n        toDoItemEl.setAttribute(\"checked\", \"true\");\r\n      }\r\n      toDoItemEl.addEventListener(\"change\", (e: any) => {\r\n        state.changeItemState(e.detail.id, e.detail.value);\r\n      });\r\n      tasksList.appendChild(toDoItemEl);\r\n    }\r\n  }\r\n\r\n  state.suscribe(() => {\r\n    createTasks(state.getDisabledTasks());\r\n  });\r\n\r\n  createTasks(tasks);\r\n\r\n  div.querySelector(\".add-button\").addEventListener(\"click\", () => {\r\n    const inputEl = document.querySelector(\"input\");\r\n    let title = inputEl.value;\r\n    state.addTask(Math.random(), title);\r\n  });\r\n\r\n  div.querySelector(\".button-todo\").addEventListener(\"click\", () => {\r\n    containerEl.goTo(\"/personal-tracker/to-do\");\r\n  });\r\n  div.querySelector(\".button-done\").addEventListener(\"click\", () => {\r\n    containerEl.goTo(\"/personal-tracker/done\");\r\n  });\r\n\r\n  return div;\r\n}\r\n","import \"./components/text\";\r\nimport \"./components/button\";\r\nimport \"./components/to-do-item\";\r\nimport { initRouter } from \"./router\";\r\nimport { state } from \"./state\";\r\n\r\nfunction main() {\r\n  const rootElement = document.querySelector(\".root\");\r\n  initRouter(rootElement);\r\n  state.getState();\r\n}\r\nmain();\r\n"],"names":["$b87b8a881a37c7b5$export$a90b6065d292b1b0","HTMLElement","super","tags","tag","shadow","this","attachShadow","mode","includes","getAttribute","render","style","document","createElement","innerHTML","rootEl","textContent","appendChild","customElements","define","$0eab8e48da1cc601$export$3e142902fa56c5af","button","className","checked","connectedCallback","title","hasAttribute","id","innerText","addListeners","querySelector","addEventListener","e","target","event","CustomEvent","detail","value","deleted","dispatchEvent","div","classList","add","$792e4afce125cd80$export$c837a8b98c265ae3","data","tasks","completed","listeners","getState","getEnabledTasks","filter","t","getDisabledTasks","addTask","currentState","push","setState","changeItemState","found","find","console","log","newState","cb","localStorage","setItem","JSON","stringify","suscribe","callback","$da5d819811de6cc8$export$d5d88de3043c6ac8","containerEl","tasksList","createTasks","items","item","toDoItemEl","setAttribute","Math","random","goTo","$1f0246c3bb9f020c$var$routes","path","component","conteiner","history","pushState","handleRoute","route","r","test","el","lastState","firstChild","remove","location","host","pathname","window","onpopstate","$1f0246c3bb9f020c$export$f03b0d45d4202f55"],"version":3,"file":"index.68123247.js.map"}